$screen-xs-min: 480px;
$screen-sm-min: 768px;
$screen-md-min: 992px;
$screen-lg-min: 1200px;


$burnt-sienna: #F27959; // Orange
$pastel-green: #74DE7D; // Green
$malibu: #79B9F6; // Blue
$turbo: #EDE600; // yellow
$lavendar: #C980EA; // purple
$tulip-tree: #EFB348; // Orange
$alabaster: #F7F7F7; // light gray

$font-family-sans-serif: "freight-sans-pro", "Lato", "Helvetica Neue", Helvetica, Arial, sans-serif;

$link-transition: 0.2s ease-in-out all;

$font-weight-regular: 400;
$font-weight-bold: 700;


@mixin transform($transforms) {
	-moz-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}

@mixin transform-origin ($origin) {
	moz-transform-origin: $origin;
	-ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
	transform-origin: $origin;
}

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  animation: #{$str};
}
@mixin animation-delay($str) {
  -webkit-animation-delay: #{$str};
  -moz-animation-delay: #{$str};
  -ms-animation-delay: #{$str};
  animation-delay: #{$str};
}

@mixin sr-only {
	position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}


//calculating type so that we can get true sizes
$browser-context: 16; // Default size

@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}

$font-size-date: em(144); // large dates
$font-size-body: em(16);
$font-size-sm: em(14);
$font-large-intro: em(48);
$font-size-h1: em(42);
$font-size-h2: em(24);
$font-size-h3: em(22); // currently used for H2 sizing - to fix up
$font-size-h4: em(30); // used for blockquotes
$font-size-h5: em(72); // used for homepage
$font-size-h6: em(14);

// Change scale

$mod_1: 1.05;
$mod_2: 1.15;


// Fluid Type Mixin

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  } @else {
    @error "Detected mixed units. Please use the same units for all parameters. " + $u1 +", " + $u2 + ", " + $u3 +", "+ $u4;
  }
}

// Calculate Modular Scale
$h1-min: $mod_1*$mod_1*$mod_1*$mod_1*$mod_1 * 1rem;
$h1-max: $mod_2*$mod_2*$mod_2*$mod_2*$mod_2 * 1rem;

$h2-min: $mod_1*$mod_1*$mod_1*$mod_1 * 1rem;
$h2-max: $mod_2*$mod_2*$mod_2*$mod_2 * 1rem;

$h3-min: $mod_1*$mod_1*$mod_1 * 1rem;
$h3-max: $mod_2*$mod_2*$mod_2 * 1rem;

$h4-min: $mod_1*$mod_1 * 1rem;
$h4-max: $mod_2*$mod_2 * 1rem;

$h5-min: $mod_1 * 1rem;
$h5-max: $mod_2 * 1rem;

$h6-min: 1rem;
$h6-max: 1rem;
